{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "fdbfa2c4",
   "metadata": {},
   "outputs": [],
   "source": [
    "## python program for hello world?\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "a8661119",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'hello python'"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\"hello python\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "bb1a2632",
   "metadata": {},
   "outputs": [],
   "source": [
    "##python program to do addition multiplication and division "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "d4e4573c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "sum of var1+var2 is 88\n",
      "multiplication of var1+var2 is 1935\n",
      "division of var1+var2 is 0.9555555555555556\n"
     ]
    }
   ],
   "source": [
    "var1=43\n",
    "var2=45\n",
    "sum=var1+var2\n",
    "multiplication=var1*var2\n",
    "division=var1/var2\n",
    "print(\"sum of var1+var2 is\",sum)\n",
    "print(\"multiplication of var1+var2 is\",multiplication)\n",
    "print(\"division of var1+var2 is\",division)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "3ab4adc9",
   "metadata": {},
   "outputs": [],
   "source": [
    "## python program to find area of a triangle"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2d785e0b",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "025d2af9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The area of the triangle is 8.94\n"
     ]
    }
   ],
   "source": [
    "a = 6\n",
    "b = 3\n",
    "c = 7\n",
    "\n",
    "# Uncomment below to take inputs from the user\n",
    "# a = float(input('Enter first side: '))\n",
    "# b = float(input('Enter second side: '))\n",
    "# c = float(input('Enter third side: '))\n",
    "\n",
    "# calculate the semi-perimeter\n",
    "s = (a + b + c) / 2\n",
    "\n",
    "# calculate the area\n",
    "area = (s*(s-a)*(s-b)*(s-c)) ** 0.5\n",
    "print('The area of the triangle is %0.2f' %area)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "1caa2318",
   "metadata": {},
   "outputs": [],
   "source": [
    "## python code for swapping of two number\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "df1f7290",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "x after swapping= 12\n",
      "y after swapping = 34\n"
     ]
    }
   ],
   "source": [
    "x = 34\n",
    "y = 12\n",
    "\n",
    "x, y = y, x\n",
    "print(\"x after swapping=\", x)\n",
    "print(\"y after swapping =\", y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "5617eb8c",
   "metadata": {},
   "outputs": [],
   "source": [
    "## python code to genrate random number"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "190baf4b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "7\n"
     ]
    }
   ],
   "source": [
    "import random\n",
    "print(random.randint(0,9))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1eb635f6",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
